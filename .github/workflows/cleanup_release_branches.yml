name: Cleanup release branches

on:
  schedule:
    # Runs every Monday at 05:00 UTC
    - cron: '0 5 * * 1'
  workflow_dispatch:
    inputs:
      keep_count:
        description: 'How many latest branches to keep'
        required: true
        default: '6'
        type: choice
        options:
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '12'
      dry_run:
        description: 'Dry run (true/false)'
        required: true
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

jobs:
  cleanup:
    name: Delete old release branches
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      BRANCH_PATTERN: iqss_production_v
    steps:
      - name: Delete branches older than latest KEEP_COUNT
        run: |
          set -euo pipefail

          KEEP_COUNT="${{ github.event.inputs.keep_count || '6' }}"
          DRY_RUN="${{ github.event.inputs.dry_run || 'false' }}"

          echo "Fetching branches matching pattern: ${BRANCH_PATTERN}*"
          branches=$(gh api repos/${GITHUB_REPOSITORY}/branches \
            --paginate \
            -q '.[] | select(.name | startswith(env.BRANCH_PATTERN)) | .name')

          total=$(echo "$branches" | wc -l | xargs)
          if (( total <= KEEP_COUNT )); then
            echo "Found $total release branches. Nothing to delete."
            exit 0
          fi

          echo "Total branches found: $total"

          # Sort branches by last commit date (descending)
          sorted=$(for b in $branches; do
            date=$(gh api repos/${GITHUB_REPOSITORY}/branches/$b --jq '.commit.commit.author.date')
            echo "$date $b"
          done | sort -r | awk '{print $2}')

          keep=$(echo "$sorted" | head -n "$KEEP_COUNT")
          delete=$(echo "$sorted" | tail -n +"$((KEEP_COUNT+1))")

          echo "Keeping latest $KEEP_COUNT branches:"
          echo "$keep" | sed 's/^/  /'

          echo "Deleting $(echo "$delete" | wc -l | xargs) branches:"
          echo "$delete" | sed 's/^/  /'

          for branch in $delete; do
            if [[ "$DRY_RUN" == "true" ]]; then
              echo "[Dry run] Would delete $branch"
            else
              echo "Deleting $branch"
              gh api -X DELETE "repos/${GITHUB_REPOSITORY}/git/refs/heads/$branch"
            fi
          done
        env:
          GITHUB_TOKEN: ${{ github.token }}
